version: '3.8'

services:
  backend:
    image: backend # Or use your custom backend image
    container_name: backend_service
    build:
      context: ./backend
    env_file:
      - ./backend/.env
    ports:
      - '5000:3000'
    environment:
      - NODE_ENV=production

  nginx:
    image: nginx_proxy:latest
    container_name: nginx_proxy
    build:
      context: ./nginx
    volumes:
      - ./nginx/logs:/var/log/nginx # Mount a host directory to persist logs
    ports:
      - '8080:80' # Expose Nginx on port 8080
    depends_on:
      - backend
      - geoip

  geoip:
    image: ghcr.io/observabilitystack/geoip-api
    ports:
      - 8081:8080

  # minio:
  #   image: minio/minio
  #   entrypoint:
  #     - sh
  #     - -euc
  #     - |
  #       mkdir -p /data/loki-data && \
  #       mkdir -p /data/loki-ruler &&
  #       minio server --address "0.0.0.0:9000" --console-address "0.0.0.0:9001" /data
  #   environment:
  #     - MINIO_ROOT_USER=loki
  #     - MINIO_ROOT_PASSWORD=supersecret
  #     - MINIO_PROMETHEUS_AUTH_TYPE=public
  #     - MINIO_UPDATE=off
  #   ports:
  #     - "9000:9000"
  #     - "9001:9001"
  #   volumes:
  #     - ./.data/minio:/data
  # loki:
  #   image: grafana/loki:latest
  #   container_name: loki
  #   ports:
  #     - '3100:3100' # Expose Loki on port 3100
  #   command: -config.file=/etc/loki/local-config.yaml
  #   volumes:
  #     - ./loki/config:/etc/loki # Config for Loki
  #     - loki_data:/data # Persistent data storage for Loki

  loki-gateway:
    container_name: loki-gateway
    image: nginx:latest
    volumes:
      - ./loki/config/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8082:80"
      - "3100"
    depends_on:
      - loki-read
      - loki-write
      - loki-backend

  loki-read:
    image: grafana/loki:latest
    volumes:
      - ./loki/config:/etc/loki/
      - ./loki/s3_access_key:/run/secrets/s3_access_key
      - ./loki/s3_secret_key:/run/secrets/s3_secret_key
      - ./loki/s3_endpoint:/run/secrets/s3_endpoint
    # only needed for interactive debugging with dlv
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - apparmor=unconfined
    ports:
      - "3100"
      - "7946"
      # uncomment to use interactive debugging
      # - "40000-40002:40000" # makes the replicas available on ports 40000, 40001, 40002
    command: "-config.file=/etc/loki/loki.yaml -target=read -legacy-read-mode=false"
    restart: always
    deploy:
      mode: replicated
      replicas: 3

  loki-write:
    image: grafana/loki:latest
    volumes:
      - ./loki/config:/etc/loki/
      - ./loki/s3_access_key:/run/secrets/s3_access_key
      - ./loki/s3_secret_key:/run/secrets/s3_secret_key
      - ./loki/s3_endpoint:/run/secrets/s3_endpoint
    # only needed for interactive debugging with dlv
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - apparmor=unconfined
    ports:
      - "3100"
      - "7946"
      # uncomment to use interactive debugging
      # - "50000-50002:40000" #  makes the replicas available on ports 50000, 50001, 50002
    command: "-config.file=/etc/loki/loki.yaml -target=write"
    restart: always
    deploy:
      mode: replicated
      replicas: 3

  loki-backend:
    image: grafana/loki:latest
    volumes:
      - ./loki/config:/etc/loki/
      - ./rules:/loki/rules:ro
      - ./loki/s3_access_key:/run/secrets/s3_access_key
      - ./loki/s3_secret_key:/run/secrets/s3_secret_key
      - ./loki/s3_endpoint:/run/secrets/s3_endpoint
    # only needed for interactive debugging with dlv
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - apparmor=unconfined
    ports:
      - "3100"
      - "7946"
      # uncomment to use interactive debugging
      # - "60000-60002:40000" #  makes the replicas available on ports 60000, 60001, 60002
    command: "-config.file=/etc/loki/loki.yaml -target=backend -legacy-read-mode=false"
    restart: always
    deploy:
      mode: replicated
      replicas: 3

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail/config:/etc/promtail # Config for Promtail
      - ./nginx/logs:/var/log/nginx # Nginx logs for Promtail to scrape
    command: -config.file=/etc/promtail/promtail-config.yaml

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - '3000:3000' # Expose Grafana on port 3000
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin # Default admin password
    volumes:
      - grafana_data:/var/lib/grafana:rw # Persistent storage for Grafana

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - prometheus_data:/prometheus # Persistent data volume
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml # Config file
    ports:
      - '9090:9090'

networks:
  loki:

volumes:
  grafana_data:
  loki_data:
  prometheus_data:
